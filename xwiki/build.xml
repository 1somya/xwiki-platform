<!--
/**
* ===================================================================
*
* Copyright (c) 2003 Ludovic Dubost, All rights reserved.
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU Lesser General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details, published at
* http://www.gnu.org/copyleft/lesser.html or in lesser.txt in the
* root folder of this distribution.
-->


<project name="XWiki Content and Application Management Framework"
    default="release"
    basedir="." >

    <!-- Allow any user specific values to override the defaults -->
    <property file="${user.home}/build.properties" />
    <!-- Allow user defaults for this project -->
    <property file="build.properties" />

    <!-- The following line is used to read the version -->
    <property file="src/web/WEB-INF/xwiki.cfg" />


    <property name="app.name" value="xwiki" />
    <property name="pkg"  value="com.xpn.xwiki" />

    <property name="src.dir"   value="${basedir}/src" />
    <property name="lib.dir"   value="${basedir}/lib" />

    <property name="build.dir"  value="${basedir}/build" />

    <property name="classes.dir" value="${build.dir}/web/WEB-INF/classes" />
    <property name="release.dir"  value="${basedir}/release" />
    <property name="dist.dir" value="${basedir}/dist" />

    <property name="test.reports.dir" value="${basedir}/test/reports" />
    <property name="test.clover.dir" value="${basedir}/test/clover" />

    <property name="doc.dir"   value="${basedir}/doc" />
    <property name="javadoc.dir"   value="${doc.dir}/api" />

    <property name="javacc.lib.dir" value="${javacc.home}/bin/lib" />

    <property name="libs.servlet"
        value="${lib.dir}/servlet.jar" />

    <property name="libs.hibernate"
        value="${lib.dir}/hibernate2.jar;${lib.dir}/c3p0.jar;${lib.dir}/cglib2.jar;${lib.dir}/dom4j.jar;${lib.dir}/ehcache.jar;${lib.dir}/hibernate-tools.jar;${lib.dir}/mysql-connector-java-3.0.9-stable-bin.jar;${lib.dir}/odmg.jar;${lib.dir}/oscache.jar;${lib.dir}/swarmcache.jar;${lib.dir}/xalan.jar;${lib.dir}/xerces.jar;${lib.dir}/xml-apis.jar;${lib.dir}/jta.jar" />

    <property name="libs.jakartacommons"
        value="${lib.dir}/commons-beanutils.jar;${lib.dir}/commons-collections.jar;${lib.dir}/commons-digester.jar;${lib.dir}/commons-lang.jar;${lib.dir}/commons-logging.jar;${lib.dir}/ecs-1.4.2.jar;${lib.dir}/jakarta-oro-2.0.7.jar;${lib.dir}/log4j-1.2.8.jar;${lib.dir}/commons-fileupload-1.0.jar;${lib.dir}/commons-dbcp-1.1.jar;${lib.dir}/commons-pool-1.1.jar" />

    <property name="libs.jrcs"
        value="${lib.dir}/org.apache.commons.jrcs.rcs.jar" />

    <property name="libs.struts"
        value="${lib.dir}/struts.jar" />

    <property name="libs.velocity"
        value="${lib.dir}/velocity-dep-1.3.1.jar;${lib.dir}/velocity-tools-1.1-beta1.jar" />

    <property name="libs.ant"
        value="${lib.dir}/ant.jar" />

    <property name="libs.inlinejava"
        value="${lib.dir}/InlineJavaServer.jar;${lib.dir}/InlineJavaUser.jar" />

    <property name="libs.osuser"
        value="${lib.dir}/oscore.jar;${lib.dir}/osuser.jar;${lib.dir}/osuserpropertyset.jar;${lib.dir}/osaccess.jar;${lib.dir}/securityfilter.jar;${lib.dir}/commons-codec.jar" />

    <property name="libs.tests"
        value="${lib.dir}/cactus-1.5.jar;${lib.dir}/cactus-ant-1.5.jar;${lib.dir}/aspectjrt-1.1.1.jar;${lib.dir}/commons-httpclient-2.0-rc2.jar;${lib.dir}/httpunit-1.5.3.jar;${lib.dir}/junit.jar;${lib.dir}/nekohtml-0.7.4.jar;${lib.dir}/clover-1.2.3.jar" />

    <property name="libs"
        value="${libs.servlet};${libs.hibernate};${libs.jakartacommons};${libs.jrcs};${libs.struts};${libs.velocity};${libs.ant};${libs.inlinejava};${libs.osuser};${libs.tests}" />


    <property name="clover.initstring" location="${test.clover.dir}/clover"/>
    <available property="junit.available" classname="junit.framework.TestCase"/>
    <available property="clover.available" classname="org.apache.tools.ant.taskdefs.CloverCompilerAdapter" />

    <target name="junit-check" depends="prepare" unless="junit.available">
        <fail message="Cannot run test cases. Please copy lib/build/junit-3.8.1.jar to ${ant.home}/lib"/>
    </target>

    <target name="clover-check" depends="prepare" unless="clover.available">
        <fail message="Cannot run coverage tests. Please copy lib/build/clover-1.2.3.jar to ${ant.home}/lib"/>
    </target>

    <target name="clover-yes" depends="prepare" if="clover.available">
        <property name="compiler" value="org.apache.tools.ant.taskdefs.CloverCompilerAdapter"/>
        <mkdir dir="${clover.dir}" />
        <mkdir dir="${test.clover.dir}" />
    </target>

    <target name="clover-no" depends="prepare" unless="clover.available">
        <property name="compiler" value="modern"/>
    </target>

    <!-- Define the Cactus tasks -->
    <taskdef resource="cactus.tasks">
        <classpath>
            <pathelement location="${lib.dir}/cactus-1.5.jar"/>
            <pathelement location="${lib.dir}/cactus-ant-1.5.jar"/>
            <pathelement location="${lib.dir}/commons-httpclient-2.0-rc2.jar"/>
            <pathelement location="${lib.dir}/commons-logging.jar"/>
            <pathelement location="${lib.dir}/aspectjrt-1.1.1.jar"/>
        </classpath>
    </taskdef>

    <target name="prepare">
        <propertyfile file="src/web/WEB-INF/version.properties" >
            <entry key="build.number" type="int" value="1" operation="+" />
        </propertyfile>
        <property file="src/web/WEB-INF/version.properties" />
        <property name="version" value="${xwiki.version}.${build.number}" />
        <property name="release.warfile" value="${release.dir}/xwiki-${version}.war" />
        <mkdir dir="${build.dir}" />
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${release.dir}" />
    </target>

    <target name="clean">
        <delete dir="${javadoc.dir}" />
        <delete dir="${doc.dir}/junit" />
        <delete dir="${doc.dir}/clover" />
        <delete dir="${build.dir}" />
        <delete dir="${release.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${test.reports.dir}" />
        <delete dir="${test.clover.dir}" />
    </target>

    <patternset id="non.java.sources">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
        <include name="**/*.tld" />
        <include name="**/*.vm" />
        <include name="**/*.cfg" />
        <include name="**/*.txt" />
        <exclude name="web/**" />
        <exclude name="perl/**" />
        <exclude name="${src.dir}/web.xml" />
    </patternset>

    <patternset id="test.classes">
        <include name="**/test/*.class" />
    </patternset>

    <target name="xwiki.nonjava" depends="prepare">
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}">
                <patternset refid="non.java.sources" />
            </fileset>
        </copy>

        <copy todir="${build.dir}/web">
            <fileset includes="**"
                dir="${src.dir}/web" />
        </copy>

        <copy todir="${build.dir}/web/WEB-INF/perl">
            <fileset includes="**"
                dir="${src.dir}/perl" />
        </copy>

        <copy todir="${build.dir}/web/WEB-INF">
            <fileset includes="license.txt"
                dir="${basedir}" />
            <fileset includes="lesser.txt"
                dir="${basedir}/" />
        </copy>


        <copy todir="${build.dir}/web/WEB-INF/classes">
            <fileset dir="${build.dir}/web/WEB-INF">
                <include name="hibernate*.cfg.xml" />
            </fileset>
        </copy>

    </target>


    <target name="xwiki" depends="clover-yes, clover-no, xwiki.nonjava">
        <javac srcdir="${src.dir}"
            destdir="${classes.dir}"
            classpath="${libs}"
            debug="on" optimize="on" deprecation="on"
            compiler="${compiler}" >
            <include name="com/xpn/xwiki/**/*.java" />
            <exclude name="**/test/*.class" />
        </javac>
    </target>

    <target name="tests" depends="junit-check,prepare,xwiki">
        <javac srcdir="${src.dir}"
            destdir="${classes.dir}"
            classpath="${libs};${classes.dir}"
            debug="on" optimize="on" deprecation="on">
            <include name="**/test/*.java" />
        </javac>
    </target>

    <target name="test.perl" depends="xwiki, tests">
        <mkdir dir="${test.reports.dir}" />
        <mkdir dir="${test.clover.dir}" />

        <junit printsummary="yes" dir="${basedir}/test" fork="on" >

            <classpath>
                <pathelement path="${classes.dir}" />
                <pathelement path="${libs}" />
            </classpath>
            <formatter type="xml" />

            <test todir="${test.reports.dir}" name="${pkg}.test.PerlTest" haltonfailure="no"/>
        </junit>
    </target>

    <target name="test.client" depends="xwiki, tests">
        <mkdir dir="${test.reports.dir}" />

        <junit printsummary="yes" dir="${basedir}/test" haltonfailure="no" fork="on" >

            <classpath>
                <pathelement path="${classes.dir}" />
                <pathelement path="${libs}" />
            </classpath>
            <formatter type="xml" />

            <batchtest todir="${test.reports.dir}">
                <fileset dir="${src.dir}">
                    <include name="com/xpn/xwiki/test/*Test.java"/>
                    <exclude name="**/StoreTest.java"/>
                    <exclude name="**/StoreObjectTest.java"/>
                    <exclude name="**/ViewEditTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.server" depends="release, tests">

        <mkdir dir="${test.reports.dir}" />

        <cactus printsummary="yes" warfile="${release.warfile}" dir="${basedir}/test" fork="on" >

            <classpath>
                <pathelement path="${classes.dir}" />
                <pathelement path="${libs}" />
            </classpath>
            <formatter type="xml" />

            <test todir="${test.reports.dir}" name="${pkg}.test.ViewEditTest" haltonfailure="no" />

            <containerset>
                <tomcat4x dir="${tomcat4x.home}" serverxml="${basedir}/test/server.xml"
                    port="9080" todir="${test.reports.dir}"/>
            </containerset>
        </cactus>
    </target>

    <target name="test"  depends="test.client, test.server" />
    <target name="test.clover"  depends="clover-check, test.client, test.server" />

    <target name="clover.report" depends=""  if="clover.available">
        <mkdir dir="${doc.dir}/clover" />
        <java classname="com.cortexeb.tools.clover.reporters.html.HtmlReporter" fork="true">
            <arg line="--outputdir ${doc.dir}/clover --showSrc --initstring ${clover.initstring} --title '${app.name}'"/>
            <classpath>
                <pathelement path="${classes.dir}" />
                <pathelement path="${libs}" />
            </classpath>
        </java>
    </target>

    <target name="junit.report" depends="test">
        <mkdir dir="${doc.dir}/junit" />
        <junitreport todir="${doc.dir}/junit">
            <fileset dir="${test.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${doc.dir}/junit"/>
        </junitreport>
    </target>

    <target name="javadoc" depends="xwiki">
        <mkdir dir="${javadoc.dir}" />
        <javadoc packagenames="com.xpn.xwiki.*"
            sourcepath="${src.dir}"
            destdir="${javadoc.dir}"
            classpath="${libs}"
            author="true"
            version="true"
            private="yes"
            windowtitle="${app.name} API"
            doctitle="${app.name}"
            bottom="Copyright 2003 Ludovic Dubost"
            >
        </javadoc>
    </target>

    <target name="doc" depends="javadoc, junit.report, clover.report" />

    <target name="release" depends="xwiki">
        <mkdir dir="${release.dir}" />
        <war warfile="${release.warfile}" basedir="${build.dir}/web" webxml="${src.dir}/web.xml" >
            <exclude name="**/web.xml" />
            <lib dir="${basedir}/lib" />
        </war>

    </target>

    <target name="bin.dist" depends="release, javadoc">
        <mkdir dir="${dist.dir}" />
        <property name="bin.tarfile" value="${dist.dir}/xwiki-${version}.tar.gz" />
        <delete file="${bin.tarfile}" />

        <tar compression="gzip" tarfile="${bin.tarfile}">
            <tarfileset dir="${release.dir}" prefix="release" excludes="**/CVS/*" />
            <tarfileset dir="${lib.dir}" prefix="lib" excludes="**/CVS/*" />
            <tarfileset dir="${doc.dir}" prefix="doc" excludes="**/CVS/*" />
            <tarfileset dir="${basedir}" includes="license.txt,lesser.txt" />
        </tar>
    </target>

    <target name="src.dist" depends="release, javadoc">
        <mkdir dir="${dist.dir}" />
        <property name="src.tarfile" value="${dist.dir}/xwiki-${version}-src.tar.gz" />
        <delete file="${src.tarfile}" />

        <tar compression="gzip" tarfile="${src.tarfile}">
            <tarfileset dir="CVS" prefix="CVS" />
            <tarfileset dir="${release.dir}" prefix="release" excludes="**/CVS/*" />
            <tarfileset dir="${lib.dir}" prefix="lib" />
            <tarfileset dir="${doc.dir}" prefix="doc" />
            <tarfileset dir="${src.dir}" prefix="src" />
            <tarfileset dir="${basedir}/test" prefix="test" excludes="reports/*" />
            <tarfileset dir="${basedir}" includes="*.properties,*.xml,*.iml,*.ipr,*.iws" />
            <tarfileset dir="${basedir}" includes="license.txt,lesser.txt" />
        </tar>
    </target>

    <target name="all"  depends="release, test, doc, bin.dist, src.dist" />

</project>

