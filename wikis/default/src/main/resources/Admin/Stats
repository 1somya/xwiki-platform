<?xml version="1.0" encoding="ISO-8859-1"?>

<xwikidoc>
<web>Admin</web>
<name>Stats</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1165966848000</creationDate>
<date>1166177448000</date>
<contentUpdateDate>1169801141000</contentUpdateDate>
<version>1.6</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<name>tags</name>
<prettyName>Tags</prettyName>
<unmodifiable>0</unmodifiable>
<relationalStorage>1</relationalStorage>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<size>30</size>
<separator> </separator>
<separators> ,|</separators>
<values></values>
<number>1</number>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.Stats</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>1 Stats API Demo

&lt;%
period = request.get("period")
Calendar cal = Calendar.getInstance();
cal.setTime(new Date());
if (period==null) {
 period = cal.get(Calendar.YEAR) * 100 + (cal.get(Calendar.MONTH)+1)
}

jour = cal.get(Calendar.YEAR) * 10000 + (cal.get(Calendar.MONTH)+1) * 100 + (cal.get(Calendar.DAY_OF_MONTH)+1) 

type = request.get("type")
if (type==null)
 type = "view"

%&gt;

1.1 Wiki Stats [Top du Mois&gt;${doc.name}] [Top du Jour&gt;${doc.name}?period=${jour}]

1.1.1 Total

&lt;%
sql = "select stats.name, stats.pageViews, stats.visits from DocumentStats as stats where stats.action = '${type}'  and stats.name not like '%.%' and stats.period=${period} order by stats.pageViews desc"
result = xwiki.search(sql, 20, 0)

for (item in result) {
 name = item[0]
 nb = item[1]
 visits = item[2]
 if (name=="") {
  println "* Total Pages: ${nb}" 
  println "* Total Visits: ${visits}" 
 }
 else {
  println "* Space ${name}: ${nb}" 
 }
}
%&gt;


1.1.1 Pages
&lt;%
sql = "select stats.name, stats.pageViews from DocumentStats as stats where stats.action = '${type}'  and stats.name like '%.%' and stats.period=${period} order by stats.pageViews desc"
result = xwiki.search(sql, 20, 0)

for (item in result) {
 name = item[0]
 nb = item[1]
 println "* [${name}]: ${nb}" 
}
%&gt;

1.1 Last user connected

&lt;%

sql = "select stats.name, max(stats.endDate) from VisitStats as stats group by stats.name order by 2 desc";
result = xwiki.search(sql, 100, 0)

for (item in result) {
 user = item[0]
 userdate = item[1]
 try {
  userlink = xwiki.getUserName(user)
 } catch(Exception e) {
  userlink = user
 }
 println "* ${userlink}: ${userdate}" 
}
%&gt;
</content></xwikidoc>