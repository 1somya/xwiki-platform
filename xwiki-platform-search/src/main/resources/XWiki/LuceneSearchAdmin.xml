<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>LuceneSearchAdmin</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>SearchAdmin</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1272286749000</creationDate>
<date>1273237708000</date>
<contentUpdateDate>1273237708000</contentUpdateDate>
<version>1.1</version>
<title>Lucene search administration</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<content>{{velocity output="false"}}
#set($lucene = $xwiki.lucene)
{{/velocity}}

{{velocity}}
#if ($hasAdmin)
  #if ($request.action == 'indexfarm')
    #if ($context.isMainWiki())
      #set($clearIndex = true)
      #set($onlyNew = false)
      #set($startindex = true)
    #else## !$context.isMainWiki()
      {{error}}$msg.get('needadminrights').{{/error}}
    #end
  #elseif ($request.action == 'indexcurrentwiki')
    #set($wikis = [$context.database])
    #set($wikisString = "${context.database}")
    #set($clearIndex = true)
    #set($onlyNew = false)
    #set($startindex = true)
  #elseif ($request.action == 'indexcustom')
    #if ($context.isMainWiki())
      #if ($request.wikis)
        #set($wikisArray = $request.wikis.split(','))
        #set($wikis = $wikisArray.subList(0, $wikisArray.size()))
        #set($wikisString = $request.wikis)
      #end
    #else## !$context.isMainWiki()
      #set($wikis = [$context.database])
      #set($wikisString = "${context.database}")
    #end
    #set($hqlFilter = $request.hqlFilter)
    #set($clearIndex = $request.clearIndex == 'on')
    #set($onlyNew = $request.onlyNew == 'on')
    #set($startindex = true)
  #end
  ##
  #if ($startindex)
    #set($errorcode = $lucene.startIndex($wikis, $hqlFilter, $clearIndex, $onlyNew))
    #if ($errorcode &gt; 0)
      {{info}}$msg.get('search.admin.lucene.indexing.message.started'){{/info}}
    #elseif ($errorcode == -1)
      {{error}}$msg.get('needadminrights').{{/error}}
    #elseif ($errorcode == -2)
      {{warning}}$msg.get('search.admin.lucene.indexing.message.alreadystarted'){{/warning}}
    #end
  #end
#else## !hasAdmin
 {{error}}$msg.get('needadminrights').{{/error}}
#end## hasAdmin
{{/velocity}}

(% id="Hsearch.admin.lucene.status.title" %)
== {{velocity}}$msg.get('search.admin.lucene.status.title'){{/velocity}} ==

{{velocity}}$msg.get('search.admin.lucene.status.description'){{/velocity}}

|={{velocity}}$msg.get('search.admin.lucene.status.infotitle'){{/velocity}}|={{velocity}}$msg.get('search.admin.lucene.status.valuetitle'){{/velocity}}
|{{velocity}}$msg.get('search.admin.lucene.status.indexed'){{/velocity}}|{{velocity}}$lucene.luceneDocCount{{/velocity}}
|{{velocity}}$msg.get('search.admin.lucene.status.indexing'){{/velocity}}|{{velocity}}$lucene.queueSize{{/velocity}}

(% id="Hsearch.admin.lucene.indexing.title" %)
== {{velocity}}$msg.get('search.admin.lucene.indexing.title'){{/velocity}} ==

{{velocity}}$msg.get('search.admin.lucene.indexing.description'){{/velocity}}

{{velocity}}
#if ($hasAdmin)
{{html}}
&lt;form action="$xwiki.requestURL" enctype="multipart/form-data" method="post"&gt;
&lt;fieldset&gt;

  ## Does not really make sense to reindex the whole farm from a subwiki
  #if ($context.isMainWiki())
&lt;p&gt;
    &lt;label for="indexfarm" class="hidden"&gt;$msg.get('search.admin.lucene.indexing.action.indexfarm')&lt;/label&gt;&lt;input id="indexfarm" name="action" type="radio" value="indexfarm" #if (!$request.action || $request.action == 'indexfarm')checked="checked"#end/&gt;$msg.get('search.admin.lucene.indexing.action.indexfarm')
&lt;/p&gt;
  #end

&lt;p&gt;
  &lt;label for="indexcurrentwiki" class="hidden"&gt;$msg.get('search.admin.lucene.indexing.action.indexcurrentwiki')&lt;/label&gt;&lt;input id="indexcurrentwiki" name="action" type="radio" value="indexcurrentwiki" #if((!$context.isMainWiki() &amp;&amp; !$request.action) || $request.action == 'indexcurrentwiki'))checked="checked"#end/&gt;$msg.get('search.admin.lucene.indexing.action.indexcurrentwiki')
&lt;/p&gt;

  ## Needs programming right because it takes a custom HQL query which could be dangerous
&lt;p&gt;
  &lt;label for="indexcustom" class="hidden"&gt;$msg.get('search.admin.lucene.indexing.action.indexcustom')&lt;/label&gt;&lt;input id="indexcustom" name="action" type="radio" value="indexcustom" #if ($request.action == 'indexcustom')checked="checked"#end/&gt;$msg.get('search.admin.lucene.indexing.action.indexcustom')
&lt;/p&gt;

&lt;p&gt;
  #if ($context.isMainWiki())
    &lt;label for="indexcustom_wikis"&gt;$msg.get('search.admin.lucene.indexing.action.indexcustom.wikis')&lt;/label&gt; &lt;input id="indexcustom_wikis" name="wikis" type="text" value="$!wikisString" /&gt;
  #else
    &lt;input id="indexcustom_wikis" name="wikis" value="${context.database}" type="hidden" value="$!wikisString" /&gt;
  #end
&lt;/p&gt;

  #if ($hasProgramming &amp;&amp; $context.isMainWiki())
&lt;p&gt;
    &lt;label for="indexcustom_hqlFilter"&gt;$msg.get('search.admin.lucene.indexing.action.indexcustom.hqlfilter')&lt;/label&gt; &lt;input id="indexcustom_hqlFilter" name="hqlFilter" type="text" #if($request.hqlFilter)value="${escapetool.html($request.hqlFilter)}"#end /&gt;
&lt;/p&gt;
  #end

&lt;p&gt;
  &lt;label for="indexcustom_clearIndex"&gt;$msg.get('search.admin.lucene.indexing.action.indexcustom.clearIndex')&lt;/label&gt; &lt;input id="indexcustom_clearIndex" name="clearIndex" type="checkbox" #if($clearIndex)checked="checked"#end /&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;label for="indexcustom_onlyNew"&gt;$msg.get('search.admin.lucene.indexing.action.indexcustom.onlyNew')&lt;/label&gt; &lt;input id="indexcustom_onlyNew" name="onlyNew" type="checkbox" #if($onlyNew)checked="checked"#end /&gt;
&lt;/p&gt;

&lt;input type="submit" value="$msg.get('search.admin.lucene.indexing.button')" class="button"/&gt;

&lt;/fieldset&gt;
&lt;/form&gt;
{{/html}}
#else## !$hasAdmin
  {{error}}$msg.get('needadminrights').{{/error}}
#end
{{/velocity}}</content></xwikidoc>
