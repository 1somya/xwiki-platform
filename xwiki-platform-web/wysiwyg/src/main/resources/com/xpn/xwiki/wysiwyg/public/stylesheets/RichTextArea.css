/*
  The BODY element can have a smaller width and height than the HTML element allowing the user to click inside the HTML
  element but outside of the BODY element. In IE this leads to the HTML element being activated and the selection
  within the BODY element being cleared. This is very annoying for the user which expects to see the caret when he
  clicks inside the rich text area. Also, GWT's rich text area listens to DOM events generated within the BODY element
  and thus events triggered by the HTML element are ignored. We cannot prevent the activation of the HTML element
  because this will make scrolling with the mouse impossible. The best way to avoid this problem is to ensure through
  CSS that the BODY element has at least the width and height of the HTML element. In other words, initially when the
  document is empty the BODY should have the width and height of the rich text area. Once the user starts adding
  content and this content grows beyond the height/width of the rich text area requiring the vertical/horizontal scroll
  bar then the BODY element should increase its height/width to be able to wrap the content.
*/
html {
  height: 100%;
  width: 100%;
}

* html {
  overflow-y: scroll;
}

body.main {
  background-image: none;
  /*
    We use float:left in order to remove the body from the normal flow and thus prevent collapsing margins between
    body and its first in-flow block-level child. Otherwise the vertical scroll bar would be visible because of the
    min-height:100% rule. See http://www.w3.org/TR/CSS21/box.html#collapsing-margins
  */
  float: left;
  height: auto;
  margin: 0;
  min-height: 100%; 
  min-width: 100%;
  overflow: visible;
  padding: 0;
  position: static;
  width: auto;
}

* html body.main {
  height: 100%;
  width: 100%;
}

/*
  Overwrite no matter what list-style-position to outside position to avoid the Firefox issues with editing lists
  with inside list style. 
*/
.main ul, .main ol {
  list-style-position: outside !important;
}

/*
  XWiki 2.0 renderer places the contents of a header inside a span, which is styled in the skin. Since this is not
  common to all the syntaxes and the CSS rules can be applied directly to the header, the editor doesn't generate this
  span when applying header style to the selection. In order to view headers as in view mode we have to block some of
  the CSS rules applied to the span and add then to the header. 
*/
.main h1 span, .main h2 span, .main h3 span, .main h4 span {
  border-bottom: 0 none;
  margin: 0;
  /* IE behaves very strange when the span is displayed as block. */
  display: inline;
}

.main h1, .main h2, .main h3, .main h4 {
  border-bottom: 1px solid #CCCCCC;
  margin: 20px 0;
}

.main h1 {
  margin: 25px 0 20px 0;
}

.main .macro {
  border: 1px dashed #CCCCCC;
  background-color: transparent;
  font-size: 100%;
  text-align: left;
  padding: 1px;
  /* Prevent resizing in IE */
  width: auto !important;
  height: auto !important;
  /* Remove button padding in IE */
  overflow: visible;
  /* Prevent word wrapping inside a macro container in IE */
  white-space: nowrap;
}

.main .macro-selected {
  background-color: #E8F2FE;
}

.main .macro .macro-placeholder {
  background-image: url(../images/macro.gif);
  background-position: left center;
  background-repeat: no-repeat;
  color: gray;
  font-size: 87.5%;
  font-style: italic;
  padding-left: 20px;
}
