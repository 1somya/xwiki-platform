<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Panels</web>
<name>PanelWizard</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Panels.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1157375356000</creationDate>
<date>1253203809000</date>
<contentUpdateDate>1253203809000</contentUpdateDate>
<version>1.1</version>
<title>$msg.get("panelwizard.panelwizard")</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<attachment>
<filename>icon.png</filename>
<filesize>14155</filesize>
<author>XWiki.Admin</author>
<date>1215021941000</date>
<version>1.1</version>
<comment></comment>
<content></content>
</attachment>
<content>{pre}
##
## Redirect to force right and left panels layout
##
#set($mustRedirect = false)
#set($redirectQuery = '')
#set($redirectDoc = $doc.fullName)
#set($redirectMode = 'view')
#if($xwiki.exists('XWiki.AdminSheet'))
  ## The new administration interface, use XWiki.XWikiPreferences as the container document, and this as an included sheet
  #set($currSpace = $request.getParameter("space"))
  #set($redirectQuery = "$!{request.queryString}&amp;forceLeftPanels=1&amp;forceRightPanels=1&amp;section=Panels.PanelWizard&amp;$docvariant")
  #set($redirectMode = 'admin')
  #if($doc.name != 'XWikiPreferences' &amp;&amp; $doc.name != 'WebPreferences')
    #set($redirectDoc = 'XWiki.XWikiPreferences')
    #set($mustRedirect = true)
  #end
#else ## No admin application, use this as the container document
  #set($redirectQuery = "$!{request.queryString}&amp;forceLeftPanels=1&amp;forceRightPanels=1&amp;$docvariant")
#end
#if(!$request.getParameter("forceLeftPanels") || !$request.getParameter("forceRightPanels"))
  #set($mustRedirect = true)
#end
#if($mustRedirect)
  $response.sendRedirect($xwiki.getDocument($redirectDoc).getURL($redirectMode, $redirectQuery))
#else ## No redirect needed, display the wizard
#set($showdata = 0)
#set($showEmptyPanels = 1)
#if("$!{currSpace}" != "")
    #set($accessLevel = $xwiki.hasAccessLevel("admin", $context.user, "${currSpace}.WebPreferences"))
#else
    #set($accessLevel = $xwiki.hasAdminRights())
#end
##
## Check for admin right for the current preferences document (XWiki.XWikiPreferences or Space.WebPreferences)
##
#if($accessLevel)
  &lt;div class="floatcontainer"&gt;
    &lt;ul class="xwikitabbar" id="panelEditorSteps"&gt;
      &lt;li id="firstwtab" class="active" onclick="switchToWizardPage(this, 'PanelListSection'); return false;"&gt;&lt;a href="#PanelListSection"&gt;$msg.get("panelwizard.panellist")&lt;/a&gt;&lt;/li&gt;
      &lt;li onclick="switchToWizardPage(this, 'PageLayoutSection'); return false;"&gt;&lt;a href="#PageLayoutSection"&gt;$msg.get("panelwizard.pagelayout")&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id="xwikieditcontent" class="clear"&gt;
    &lt;div id="PanelListSection"&gt;
      &lt;span id="draganddroptooltip" class="hastooltip"&gt;$msg.get("panelwizard.draganddrop")
      #set($panelClass = $xwiki.getDocument("Panels.PanelClass").xWikiClass)
      #set($categoryList = $panelClass.category.getProperty("values").value.split("[|]"))
      #set($sql = ", BaseObject as obj where obj.name=doc.fullName and obj.className='Panels.PanelClass' and doc.fullName!='Panels.PanelTemplate'")
      #set($panelsList = $xwiki.searchDocuments($sql))
      #set($categoryMap = $util.getHashMap())
      #foreach($category in $categoryList)
        $!categoryMap.put($category, $util.getArrayList())
      #end
      #foreach ($item in $panelsList)
        ## stats panels can't be seen by non global admins
        #if($xwiki.hasAccessLevel("view", $context.user, $item))
          #set($obj = $xwiki.getDocument($item).getObject("Panels.PanelClass"))
          #if($obj.type == 'view')
            #set($arrayList = $categoryMap.get($obj.category))
            #if($arrayList)
              #set($discard = $categoryMap.get($obj.category).add($item))
              ## TODO: uncategorized?
            #end
          #end
        #end
      #end
      #set($panelsPerRow = 3)
      &lt;div id="dhtmltooltip" style="visibility: hidden;"&gt;&lt;/div&gt;
      #set($ajaxdoc = $xwiki.getDocument("Panels.AjaxEditor"))
      #if($request.place)
        #set($ajaxurl = $xwiki.getDocument("Panels.PanelLayoutUpdate").getURL("view", "xpage=plain&amp;place=${request.place}&amp;prefsdoc=${currentDoc}"))
      #else
        #set($ajaxurl = $xwiki.getDocument("Panels.PanelLayoutUpdate").getURL("view", "xpage=plain&amp;prefsdoc=${currentDoc}"))
      #end
      $xwiki.jsfx.use("js/scriptaculous/scriptaculous.js")
      $xwiki.jsfx.use("js/xwiki/accordion/accordion.js")
      $xwiki.jsfx.use("js/xwiki/panelwizard/Drag.js")
      $xwiki.jsfx.use("js/xwiki/panelwizard/ieemu.js")
      $xwiki.jsfx.use("js/xwiki/panelwizard/toolTip.js")
      &lt;script type="text/javascript"&gt;
      //&lt;![CDATA[
      Event.observe($('draganddroptooltip'), "mouseover", function() {
        if(window.isDraggingPanel) {
          return; 
        } 
        showtip($('draganddroptooltip'), '$msg.get("panelwizard.tip")', 300);
      });

      window.ajaxurl = "$ajaxurl";
      window.allPanelsPlace = new Object();
      window.panelsavesuccess = "$msg.get("panelsavesuccess")";
      window.panelsaveerror = "$msg.get("panelsaveerror")";
      #set($counter = 0)
      #set($panelsStatus = $util.hashMap)
      #foreach($category in $categoryList)
        #set($categPanels = $categoryMap.get($category))
        #foreach ($item in $categPanels)
          #set($discard = $panelsStatus.put($item, "false"))
          #set($obj = $xwiki.getDocument($item).getObject("Panels.PanelClass"))
          window.allPanelsPlace[$counter] = new Object();
          window.allPanelsPlace[$counter]['fullname'] = '$item';
          #set($issetleft = 0)
          #set($counterleft = 0)
          #set($issetright = 0)
          #set($counterright = 0)
          #foreach($element in $leftPanels)
            #if($item == $element)
              window.allPanelsPlace[$counter]['left'] = $counterleft;
              #set($issetleft = 1)
              #set($discard = $panelsStatus.put($item, "true"))
            #end
            #set($counterleft = $counterleft + 1)
          #end
          #if($issetleft == 0)
            window.allPanelsPlace[$counter]['left'] = -1;
          #end
          #foreach($element in $rightPanels)
            #if($item == $element)
              window.allPanelsPlace[$counter]['right'] = $counterright;
              #set($issetright = 1)
              #set($discard = $panelsStatus.put($item, "true"))
            #end
            #set($counterright = $counterright + 1)
          #end
          #if($issetright == 0)
            window.allPanelsPlace[$counter]['right'] = -1;
          #end
          #set($counter = $counter + 1)
        #end
      #end
      window.showLeftColumn = $showLeftPanels;
      window.showRightColumn = $showRightPanels;
      var obj = {div:'panellistaccordion', no:0, height:512};  
      Event.observe(window,'load',createAccordion.bind(this,obj));
      //]]&gt;
      &lt;/script&gt;
      &lt;script type="text/javascript" src="$xwiki.getSkinFile("js/xwiki/panelwizard/panelWizard.js")"&gt;&lt;/script&gt;
      &lt;div id="allviewpanels"&gt;
        &lt;div id="panellistaccordion" class="accordion"&gt; ## start of accordion
          #foreach($category in $categoryList)
              ## start of accordion tab:
              &lt;div class="accordionTabTitleBar" id="${category}_header"&gt;&lt;h1&gt;$category&lt;/h1&gt;&lt;/div&gt;
              ## start of accordion tab content:
              &lt;div class="accordionTabContentBox"&gt;
                #set($categPanels = $categoryMap.get($category))
                #if($categPanels.size() == 0)
                  $msg.get("panelwizard.nopanels")
                #else
                  #foreach ($item in $categPanels)
                    #set($obj = $xwiki.getDocument($item).getObject("Panels.PanelClass"))
                          &lt;div class="panelitemc"&gt;
                            &lt;div class="label"&gt;$doc.display("name", $obj)&lt;/div&gt;
                            &lt;div class="panelcontainer" onmouseover="if(!window.isDraggingPanel){ showtip(this, unescape('$util.encodeURI($doc.display("description", $obj)).replaceAll("[+]", "%20")'), 300); }"&gt;#if($panelsStatus.get($item) == "false")#displaypanel("$item")#else&lt;div class="panel"&gt;&lt;/div&gt;#end&lt;/div&gt;
                            &lt;div class="xwikibuttonlink"&gt;&lt;a href="$xwiki.getURL("$item", "inline")"&gt;$msg.get("edit")&lt;/a&gt; &lt;a href="$xwiki.getURL("$item", "delete")"&gt;$msg.get("delete")&lt;/a&gt;&lt;/div&gt;
                          &lt;/div&gt;
                   #end
                 #end
              &lt;/div&gt;  ## end of accordion tab content
            #end   ## end of foreach
          &lt;/div&gt; ## end of accordion
       &lt;/div&gt;   ## end of allpanels div
     &lt;/div&gt;      ## end of PanelsListSection
     &lt;div id="PageLayoutSection"&gt;
    $msg.get("panelwizard.choosepagelayout")

    #set($crtlayout = 0)
    #if($showLeftPanels and $showLeftPanels == "1")
      #set($crtlayout = $crtlayout + 1)
    #end
    #if($showRightPanels and $showRightPanels == "1")
      #set($crtlayout = $crtlayout + 2)
    #end
    &lt;div class="pagelayoutoptions"&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;div
            #if($crtlayout == 0)id="selectedoption" #end 
            class="pagelayoutoption" onclick="changePreviewLayout(this, 0)"&gt;
              ##&lt;input type="radio" name="pagelayout" value="nosidecol" checked="cheched" /&gt;
              &lt;label&gt;$msg.get("panelwizard.nosidecolumn")&lt;/label&gt;
              &lt;div id="nosidecolumn" class="layoutmaquette"&gt;
                &lt;div class="lmcontentcolumn"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;div 
            #if($crtlayout == 1)id="selectedoption" #end
            class="pagelayoutoption" onclick="changePreviewLayout(this, 1)"&gt;
              ##&lt;input type="radio" name="pagelayout" value="leftcol" "/&gt;
              &lt;label&gt;$msg.get("panelwizard.leftcolumn")&lt;/label&gt;
              &lt;div id="leftcolumn" class="layoutmaquette"&gt;
                &lt;div class="lmleftcolumn"&gt;&lt;/div&gt;
                &lt;div class="lmcontentcolumn"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;div
            #if($crtlayout == 2)id="selectedoption" #end
            class="pagelayoutoption" onclick="changePreviewLayout(this, 2)"&gt;
              ##&lt;input type="radio" name="pagelayout" value="rightcol" /&gt;
              &lt;label&gt;$msg.get("panelwizard.rightcolumn")&lt;/label&gt;
              &lt;div id="rightcolumn" class="layoutmaquette"&gt;
                &lt;div class="lmrightcolumn"&gt;&lt;/div&gt;
                &lt;div class="lmcontentcolumn"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;div 
            #if($crtlayout == 3)id="selectedoption" #end
            class="pagelayoutoption" onclick="changePreviewLayout(this, 3)"&gt;
              &lt;label&gt;$msg.get("panelwizard.bothcolumns")&lt;/label&gt;
              &lt;div  id="bothcolumns" class="layoutmaquette"&gt;
                &lt;div class="lmleftcolumn"&gt;&lt;/div&gt;
                &lt;div class="lmrightcolumn"&gt;&lt;/div&gt;
                &lt;div class="lmcontentcolumn"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/td&gt;
         &lt;/tr&gt;
        &lt;/table&gt;
      &lt;/div&gt;
    &lt;/div&gt;  
  &lt;/div&gt; ## xwikieditcontent
  &lt;div id="panelwizardbuttons" class="floatcontainer"&gt;
    &lt;span class="xwikibuttonlink"&gt;
      &lt;span class="buttonwrapper"&gt;&lt;a href="#" onclick="save(); return false;"&gt;$msg.get("xe.panels.wizard.savenew")&lt;/a&gt;&lt;/span&gt;
      &lt;span class="buttonwrapper"&gt;&lt;a href="$doc.getURL("view")" onclick="revert(); return false;"&gt;$msg.get("xe.panels.wizard.revert")&lt;/a&gt;&lt;/span&gt;
      &lt;span class="buttonwrapper"&gt;&lt;a href="$xwiki.getURL("Panels.WebHome")"&gt;$msg.get("xe.panels.wizard.homepage")&lt;/a&gt;&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
#else
  #xwikimessageboxstart("$msg.get('panelwizard.paneleditor')" "")
  $msg.get("panelwizard.needadminright")
  #xwikimessageboxend()
#end
#end ## redirect
{/pre}</content>
</xwikidoc>