<html>
<head>
<title>{$lang_insert_image_title}</title>
<script language="javascript" src="../../tiny_mce_popup.js"></script>
<script language="javascript">
var baseurl = tinyMCE.getParam("wiki_attach_path");
</script>
<script language="javascript">
	function insertImage() {
		if (window.opener) {
			var src = document.forms[0].href.value;
			var width = document.forms[0].width.value;
			var height = document.forms[0].height.value;

			window.opener.wikiEditor.insertImage(src, width, height);
			top.close();
		}
	}

	function init() {
        editor_id = tinyMCE.getWindowArg('editor_id');

		/*
		var formObj = document.forms[0];
		formObj.href.value = tinyMCE.getWindowArg('src');
		formObj.width.value = tinyMCE.getWindowArg('width');
		formObj.height.value = tinyMCE.getWindowArg('height');
        formObj.insert.value = tinyMCE.getLang('lang_' + tinyMCE.getWindowArg('action'), 'Insert', true);
		*/
	}

	function cancelAction() {
		tinyMCE.closeDialog();
	}

	var preloadImg = new Image();

	function resetImageData() {
		var formObj = document.forms[0];
		formObj.width.value = formObj.height.value = "";	
	}

	function updateImageData() {
		var formObj = document.forms[0];

		if (formObj.width.value == "")
			formObj.width.value = preloadImg.width;

		if (formObj.height.value == "")
			formObj.height.value = preloadImg.height;
	}

	function getImageData() {
		preloadImg = new Image();
		tinyMCE.addEvent(preloadImg, "load", updateImageData);
		tinyMCE.addEvent(preloadImg, "error", function () {var formObj = document.forms[0];formObj.width.value = formObj.height.value = "";});
		preloadImg.src = tinyMCE.convertRelativeToAbsoluteURL(tinyMCE.settings['base_href'], window.opener.wikiEditor.getImagePath() + document.forms[0].href.value);
	}


    //------------------
    // threadsafe asynchronous XMLHTTPRequest code
    function executeCommand(url, callback) {
        // we use a javascript feature here called "inner functions"
        // using these means the local variables retain their values after the outer function
        // has returned. this is useful for thread safety, so
        // reassigning the onreadystatechange function doesn't stomp over earlier requests.
        function ajaxBindCallback() {
            if (ajaxRequest.readyState == 4) {
                if (ajaxRequest.status == 200) {
                    if (ajaxCallback) {
                        ajaxCallback(ajaxRequest.responseText);
                    } else {
                        alert('no callback defined');
                    }
                } else {
                    alert("There was a problem retrieving the xml data:\n" + ajaxRequest.status + ":\t" + ajaxRequest.statusText + "\n" + ajaxRequest.responseText);
                }
            }
        }

        // addMessage(url);
        // use a local variable to hold our request and callback until the inner function is called...
        var ajaxRequest = null;
        var ajaxCallback = callback;

        // bind our callback then hit the server...
        if (window.XMLHttpRequest) {
            // moz et al
            ajaxRequest = new XMLHttpRequest();
            ajaxRequest.onreadystatechange = ajaxBindCallback;
            ajaxRequest.open("GET", url, true);
            ajaxRequest.send(null);
        } else if (window.ActiveXObject) {
            // ie
            ajaxRequest = new ActiveXObject("Microsoft.XMLHTTP");
            if (ajaxRequest) {
                ajaxRequest.onreadystatechange = ajaxBindCallback;
                ajaxRequest.open("GET", url, true);
                ajaxRequest.send();
            }
            else{
                alert("your browser does not support xmlhttprequest" )
            }
        }
        else{
            alert("your browser does not support xmlhttprequest" )
        }
    }

    function loadAttachmentList(baseurl) {
        var url = baseurl + "?xpage=attachwysiwyg&images=1";
        executeCommand(url, loadAttachmentListCallback);
    }

    function loadAttachmentListCallback(e) {
      var attachEl = document.getElementById("attachments");
      attachEl.innerHTML = e;
    }

    function updateAttachName(form) {
      form.xredirect.value=location;

      var fname = form.filepath.value;
      if (fname=="") {
        return false;
      }

      var i = fname.lastIndexOf('\\');
      if (i==-1)
       i = fname.lastIndexOf('/');

      fname = fname.substring(i+1);
      if (form.filename.value==fname)
       return true;

      if (form.filename.value=="")
       form.filename.value = fname;
      return true;
    }
</script>
</head>
<body onload="init();">
<form onsubmit="insertImage();return false;">
    <table border="0" cellpadding="0" cellspacing="0" width="200">
    <tr>
      <td align="center" valign="middle"><table border="0" cellpadding="4" cellspacing="0">
          <tr>
            <td colspan="2" class="title" nowrap="nowrap">{$lang_insert_image_title}</td>
          </tr>
          <tr>
            <td nowrap="nowrap">{$lang_insert_image_name}:</td>
            <td><table border="0" cellspacing="0" cellpadding="0">
                <tr>
                  <td><input name="href" type="text" id="href" value="" style="width: 200px" /></td>
                  <td id="browser"></td>
                </tr>
              </table></td>
          </tr>
          <tr>
            <td nowrap="nowrap">{$lang_insert_image_dimensions}:</td>
            <td><input name="width" type="text" id="width" value="" size="3" maxlength="3" />
              x
              <input name="height" type="text" id="height" value="" size="3" maxlength="3" /></td>
          </tr>
          <tr>
            <td nowrap="nowrap"><input type="button" id="insert" name="insert" value="{$lang_insert}" onclick="insertImage();">
            </td>
            <td align="right"><input type="button" id="cancel" name="cancel" value="{$lang_cancel}" onclick="cancelAction();"></td>
          </tr>
        </table></td>
    </tr>
  </table>
</form>
<hr />
<div id="attachments">
</div>
<script type="text/javascript">
    loadAttachmentList(baseurl);
</script>
</body>
</html>
