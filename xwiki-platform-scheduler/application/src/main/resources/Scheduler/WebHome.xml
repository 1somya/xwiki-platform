<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Scheduler</web>
<name>WebHome</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1252454400000</creationDate>
<date>1252454400000</date>
<contentUpdateDate>1252454400000</contentUpdateDate>
<version>1.1</version>
<title>$msg.get("xe.scheduler")</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<usesList>1</usesList>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<usesList>1</usesList>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>Scheduler.WebHome</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>0a090e8e-35ef-4529-92d4-e37bdd817b97</guid>
<property>
<allow></allow>
</property>
<property>
<groups></groups>
</property>
<property>
<levels></levels>
</property>
<property>
<users></users>
</property>
</object>
<content>{{velocity}}
## First, set a shortcut to our Scheduler plugin
##
#set($scheduler=$xwiki.scheduler)
##
## If the sheet is called with an action ($request.do), let us first process this action
## Possible values are : "schedule", "pause", "resume", "unschedule", "delete"
##
#if($request.do &amp;&amp; $request.do!="")
 ##
 ## Obtain the Job document and object for which the action has been called
 ##
 #set($tJobHolder=$request.which)
 #set($jobDoc=$xwiki.getDocument($tJobHolder))
 #set($jobObj=$jobDoc.getObject('XWiki.SchedulerJobClass'))
 #if($request.do=="schedule")
  ##
  ## Schedule a job
  ##
  #set($ok=$scheduler.scheduleJob($jobObj))
  #if($ok==false) 

   {{error}}$context.get('error'){{/error}}

  #else
   #set($jobName = "$jobObj.get('jobName')")

   {{info}}$msg.get('xe.scheduler.jobscheduled', [$jobName, $scheduler.getNextFireTime($jobObj)]){{/info}}

  #end
 #elseif($request.do=="pause")
  ##
  ## Pause a scheduled job
  ##
  #set($ok=$scheduler.pauseJob($jobObj))
  #if($ok==false) 

   {{error}}$context.get('error'){{/error}}

  #else

   {{info}}$msg.get('xe.scheduler.paused', [$jobObj.get('jobName')]){{/info}}

  #end
 #elseif($request.do=="resume")
  ##
  ## Resume a paused job
  ##
  #set($ok=$scheduler.resumeJob($jobObj))
  #if($ok==false)

   {{error}}$context.get('error'){{/error}}

  #else

   {{info}}$msg.get('xe.scheduler.resumed', [$jobObj.get('jobName'), $scheduler.getNextFireTime($jobObj)]){{/info}}

  #end
 #elseif($request.do=="unschedule")
  ##
  ## Unschedule a scheduled job (paused or not)
  ##
  #set($ok=$scheduler.unscheduleJob($jobObj))
  #if($ok==false)

   {{error}}$context.get('error'){{/error}}

  #else

   {{info}}$msg.get('xe.scheduler.unscheduled', [$jobObj.get('jobName')]){{/info}}

  #end
 #elseif($request.do=="delete")
  ##
  ## Delete a job
  ## First unschedule it (if needed), then delete its document holder
  ##
  #set($jobName=$jobObj.get('jobName'))
  #if($jobObj.get("status")=="Normal"||$jobObj.get('status')=="Paused")
   #set($ok=$scheduler.unscheduleJob($jobObj))
   #if($ok==true)
    #set($deleteRedirect = $xwiki.getURL($jobObj.getName(),"delete"))
    $response.sendRedirect($deleteRedirect)
   #else

    {{error}}$context.get('error'){{/error}}

   #end
  #else
    #set($deleteRedirect = $xwiki.getURL($jobObj.getName(),"delete"))
    $response.sendRedirect($deleteRedirect))
  #end
 #elseif($request.do=="trigger")
  ##
  ## Trigger a job (execute it now)
  ##
  #set($ok=$scheduler.triggerJob($jobObj))
  #if($ok==false)

   {{error}}$context.get('error'){{/error}}

  #else

   {{info}}$msg.get('xe.scheduler.triggered', [$jobObj.get('jobName')]){{/info}}

  #end
 #end
#end
$msg.get('xe.scheduler.welcome')

= $msg.get('xe.scheduler.jobs.list') =
##
## Retrieve all scheduler jobs living in this space
## Display their name, status, possible next fire time, and avaible actions
##
|= $msg.get('xe.scheduler.jobs.name') |= $msg.get('xe.scheduler.jobs.status') |= $msg.get('xe.scheduler.jobs.next') |= $msg.get('xe.scheduler.jobs.actions')
#set($hql = ", BaseObject as job where doc.space='Scheduler' and job.name=doc.fullName and job.className='XWiki.SchedulerJobClass' ")
#foreach($docName in $xwiki.searchDocuments($hql))
 #set($actions = $util.hashMap) ## get a hash to store action urls
 #set($jobHolder = $xwiki.getDocument($docName))
 #set($job = $jobHolder.getObject('XWiki.SchedulerJobClass'))
 #set($status = "") #set($status = $job.get('status')) #if($status=="") #set($status="None") #end
 #set($firetime = "") #if($status!="None") #set($firetime = $scheduler.getNextFireTime($job))  #else #set($firetime="N/A") #end
  #if($status=="None") 
   #set( $ok = $!actions.put("schedule",$doc.getExternalURL("view","do=schedule&amp;which=${jobHolder.fullName}")) )
  #elseif($status=="Normal")
   #set( $ok = $!actions.put("pause",$doc.getExternalURL("view","do=pause&amp;which=${jobHolder.fullName}")) )
   #set( $ok = $!actions.put("unschedule",$doc.getExternalURL("view","do=unschedule&amp;which=${jobHolder.fullName}")) )
  #elseif($status=="Paused")
   #set( $ok = $!actions.put("resume",$doc.getExternalURL("view","do=resume&amp;which=${jobHolder.fullName}")) )
   #set( $ok = $!actions.put("unschedule",$doc.getExternalURL("view","do=unschedule&amp;which=${jobHolder.fullName}")) )
  #end
  #set($ok = $!actions.put("delete",$doc.getExternalURL("view","do=delete&amp;which=${jobHolder.fullName}")) )
  #set($ok = $!actions.put("trigger",$doc.getExternalURL("view","do=trigger&amp;which=${jobHolder.fullName}")) )
  
| $job.get("jobName") | $status | $firetime | **$msg.get('xe.scheduler.jobs.infos')** : [[view&gt;&gt;$jobHolder.fullName]] #if($jobHolder.hasAccessLevel("programming")) [[$msg.get("edit")&gt;&gt;${jobHolder.getExternalURL('inline')}]] #end **$msg.get('job')** : #foreach($action in $actions.keySet()) [[$action&gt;&gt;${actions.get($action)}]] #end
#end

#if($doc.hasAccessLevel("programming"))
##
## Job creation is offered only for programmers, because the job page needs to be saved 
## with programming right for groovy jobs to be executed.
## However, this page should stay accessibles to admins, that can manipulate existing jobs :
## scheduler, pause, etc.
##

= $msg.get('xe.scheduler.jobs.create') =

##
## Form to create a new Job
##
 
{{info}}$msg.get('xe.scheduler.jobs.explaincreate')){{/info}}

{{html}}
&lt;form action="" id="newdoc"&gt;
&lt;div&gt;
&lt;input type="hidden" name="parent" value="Scheduler.WebHome" /&gt;
&lt;input type="hidden" name="template" value="XWiki.SchedulerJobTemplate" /&gt;
&lt;input type="hidden" name="sheet" value="1" /&gt;
&lt;input type="hidden" name="webname" value="Scheduler"/&gt;
&lt;input type="hidden" name="name" value=""/&gt;
&lt;input type="hidden" name="parent" value="${doc.fullName}"/&gt;
&lt;input type="text" name="title" value="$msg.get('xe.scheduler.jobs.pagename')" size="30"/&gt;
&lt;input type="button" value="$msg.get('xe.scheduler.jobs.add')" onclick='if (updateName(this.form.title,this.form.name)) { action="../../inline/" + this.form.webname.value + "/" + this.form.name.value; this.form.submit(); }' /&gt;
&lt;/div&gt;
&lt;/form&gt;
{{/html}}

#else

 {{warning}}$msg.get('xe.scheduler.jobs.warning')){{/warning}}

#end
{{/velocity}}</content>
</xwikidoc>