<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>LoggingAdminTableJson</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1343369697000</creationDate>
<date>1343393090000</date>
<contentUpdateDate>1343393090000</contentUpdateDate>
<version>14.1</version>
<title>LoggingAdminTableJson</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{velocity wiki="false"}}
#if("$!{request.xpage}" == 'plain')
  $response.setContentType('application/json')
#end
##==============================
## Offset = item # at which to start displaying data
##==============================
#set($offset = $mathtool.toInteger($request.get('offset')))
## offset starts from 0 in velocity and 1 in javascript
#set($offset = $offset - 1)
#if($offset &lt; 0)
  #set($offset = 0)
#end
##==================
## Limit = # of items to display
##==================
#set($limit = $mathtool.toInteger($request.get('limit')))
##==================
## Tag = one parameter per tag
##==================
#if($request.tag)
  #foreach($tag in $request.getParameterValues('tag'))
    ## TODO: Add code to filter items based on the selected tags
  #end
#end
##==========
## Sort direction
##==========
#set($order = "$!request.sort")
#if($order != '')
  #set($orderDirection = "$!{request.get('dir').toLowerCase()}")
  #if("$!orderDirection" != '' &amp;&amp; "$!orderDirection" != 'asc')
    #set($orderDirection = 'desc')
  #end
#end
## ===========
## Filter Data here...
## ===========
## TODO: Add code to filter data
## Each column can be filtered and the filter for a column can be retrieved with:
## #set($filterValue = "$!{request.get(&lt;columnname&gt;)}")

## ===
## JSON
## ===
## 

#set( $logger_list = $services.logging.getLevels() )
#set ($logs = $logger_list.entrySet())
#set ($logsSize = $logs.size())
#set ($limit = $mathtool.toInteger($request.limit))
#set ($offset = $mathtool.toInteger($request.offset))

#if ($request.sort)
   #if ($request.sort == "Logger" )
     #set( $propertyName = "key" )
   #else
     #set( $propertyName = "value" )
   #end
  
   #set( $logs = $sorttool.sort($logs, ["${propertyName}:${request.dir}"]) )
#end

#set($resultLog = [])
#foreach($logger in $logs)
  #if ($limit &lt;= $resultLog.size())
    #break
  #end
  #if ($request.Logger &amp;&amp; !$logger.key.contains($request.Logger))
    #set($offset = $offset + 1)
    #set($logsSize = $logsSize - 1)
  #elseif ($request.Level &amp;&amp; !$logger.value.contains($request.Level))
    #set($offset = $offset + 1)
    #set($logsSize = $logsSize - 1)
  #else
    #if ($velocityCount &gt;= $offset)
      #set($void = $resultLog.add($logger))
    #end
  #end
#end

{
"totalrows": $logsSize,
"matchingtags": {},
"tags" : [],
"returnedrows": $resultLog.size(),
"offset": $mathtool.toInteger($request.offset),
"sort": "$request.sort",
"dir": "$request.dir",
"reqNo": $mathtool.toInteger($request.reqNo),
"rows": [
#foreach( $logger in $resultLog )
   #if($velocityCount &gt; 1) , #end
{
  "doc_viewable" : true,
  "Logger" : "$escapetool.javascript($logger.key)",
  "Level" : "$logger.value",
  "Actions" : "${escapetool.javascript("&lt;form action='' enctype='multipart/form-data' method='post'&gt;
&lt;fieldset&gt;

&lt;input name='logger_name' value='$logger.key' type='hidden'/&gt;
 
&lt;select name='logger_level' size='1' style='width: 80px'&gt;
  #if ($logger.value != 'TRACE')
    &lt;option label='TRACE' value='TRACE'&gt;TRACE&lt;/option&gt;
  #end
  #if ($logger.value != 'DEBUG')
    &lt;option label='DEBUG' value='DEBUG'&gt;DEBUG&lt;/option&gt;
  #end
  #if ($logger.value != 'INFO')
    &lt;option label='INFO' value='INFO'&gt;INFO&lt;/option&gt;
  #end
  #if ($logger.value != 'WARN')
    &lt;option label='WARN' value='WARN'&gt;WARN&lt;/option&gt;
  #end
  #if ($logger.value != 'ERROR')
    &lt;option label='ERROR' value='ERROR'&gt;ERROR&lt;/option&gt;
  #end
  #if ($logger.value &amp;&amp; $logger.value != '')
    &lt;option label='default' value=''&gt;&amp;lt;default&amp;gt;&lt;/option&gt;
  #end
&lt;/select&gt;
&lt;span class='buttonwrapper'&gt;&lt;input name='loggeraction_set' value='Set' class='button' type='submit'&gt;&lt;/span&gt;

&lt;/fieldset&gt;
&lt;/form&gt;")}"
}
#end
]}

{{/velocity}}</content></xwikidoc>
