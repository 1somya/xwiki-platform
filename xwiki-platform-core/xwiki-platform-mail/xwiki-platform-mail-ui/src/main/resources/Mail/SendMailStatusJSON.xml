<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>Mail</web>
  <name>SendMailStatusJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1419849999000</creationDate>
  <parent>Mail.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1420563418000</date>
  <contentUpdateDate>1420563418000</contentUpdateDate>
  <version>1.1</version>
  <title>Send Mail Status JSON</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#if("$!{request.outputSyntax}" == 'plain' || "$!{request.xpage}" == 'plain')
  $response.setContentType('application/json')
  ##==============================
  ## Offset = item # at which to start displaying data
  ##==============================
  #set($offset = $mathtool.toInteger($request.get('offset')))
  ## Offset starts from 0 in velocity and 1 in javascript
  #set($offset = $offset - 1)
  #if(!$offset || $offset &lt; 0)
    #set($offset = 0)
  #end
  ##==================
  ## Limit = # of items to display
  ##==================
  #set($limit = $mathtool.toInteger($request.get('limit')))
  #if(!$limit)
    #set ($limit = 15)
  #end
  ##==================
  ## Tag = one parameter per tag
  ##==================
  #if($request.tag)
    #foreach($tag in $request.getParameterValues('tag'))
      ## TODO: Add code to filter items based on the selected tags
    #end
  #end
  ##==========
  ## Sort direction
  ##==========
  #set($order = "$!request.sort")
  #if($order != '')
    #set($orderDirection = "$!{request.get('dir')}")
    #if("$!orderDirection" != '' &amp;&amp; "$!orderDirection" != 'asc')
      #set($orderDirection = 'desc')
    #end
  #else
    #set($order = "date")
  #end
  ## ===========
  ## Filter Data here...
  ## ===========
  ## TODO: Add code to filter data 
  ## Each column can be filtered and the filter for a column can be retrieved with:
  ## #set($filterValue = "$!{request.get(&lt;columnname&gt;)}")
  #set($filterQuery = '')
  #set($filterId = "$!{request.get('batchId')}")
  #if("$!{filterId}" != '')
    #set($filterQuery = "and status.batchId like '%${filterId.trim()}%' ")
  #end
  #set($filterType = "$!{request.get('type')}")
  #if("$!{filterType}" != '')
    #set($filterQuery = $filterQuery + "and status.type like '%${filterType.trim()}%' ")
  #end
  #set($filterRecipients = "$!{request.get('recipients')}")
  #if("$!{filterRecipients}" != '')
    #set($filterQuery = $filterQuery + "and status.recipients like '%${filterRecipients.trim()}%' ")
  #end
  #set($filterStatus = "$!{request.get('state')}")
  #if("$!{filterStatus}" != '')
    #set($filterQuery = $filterQuery + "and status.state like '%${filterStatus.trim()}%' ")
  #end
  #set($filterError = "$!{request.get('error')}")
  #if("$!{filterError}" != '')
    #set($filterQuery = $filterQuery + "and status.errorSummary like '%${filterError.trim()}%' ")
  #end
  #set($totalrows = $services.query.xwql("select count(status) from MailStatus as status").count())
  #set($results = [])
  #if (!$xcontext.isMainWiki())
    #set($filterQuery = $filterQuery + "and status.wiki = :wiki ")
  #end
  #set($xwql = "select status from MailStatus as status where status.messageId&lt;&gt;''  $!filterQuery order by status.${order} $!orderDirection")
  #set ($query = $services.query.xwql($xwql).setOffset($offset).setLimit($limit).setWiki($xcontext.mainWikiName))
  #if (!$xcontext.isMainWiki())
    #set ($query = $query.bindValue('wiki', $xcontext.context.wikiId))
  #end
  #set($results = $query.execute())
  ## ===
  ## JSON
  ## ===
  {
    'totalrows': $totalrows,
    'matchingtags': {},
    'tags' : [],
    'returnedrows': $results.size(),
    'offset': $mathtool.toInteger($request.offset),
    'sort': "$request.sort",
    'dir': "$request.dir",
    'reqNo': $mathtool.toInteger($request.reqNo),
    'rows': [
    #foreach( $item in $results )
      #if($velocityCount &gt; 1) , #end
      {
        #set($recipients = "$!item.recipients")
        'doc_viewable' : true,
        'date' : "$xwiki.formatDate($!item.date)",
        'batchId' : "$!item.batchId",
        'type' : "$!item.type",
        'recipients' : "$escapetool.javascript($recipients)",
        'state' : "$!item.state",
        'error' : "$!item.errorSummary",
        #if("$!item.state" != 'sent')
          'actions' : "${escapetool.javascript("&lt;form action='' enctype='multipart/form-data' method='post'&gt;
              &lt;input name='mail_id' value='$!item.messageId' type='hidden'/&gt;
              &lt;input name='batch_id' value='$!item.batchId' type='hidden'/&gt;
              &lt;span class='btn-group text-left'&gt;&lt;input name='mailsendingaction_resend' value='${escapetool.xml($services.localization.render('Mail.SendMailStatus_livetable.resend'))}' class='btn btn-primary btn-sm' type='submit'&gt;
&lt;/span&gt;
            &lt;/form&gt;")}"
        #else
          'actions' : ''
        #end  
      }
    #end
    ]
  }
#else
  This page should be called by Mail.SenMailStatus with parameters.
#end
{{/velocity}}</content>
</xwikidoc>
