$response.setContentType("text/xml")
<?xml version="1.0" encoding="UTF-8"?>
<results>
#set ($input = "$!request.input.toLowerCase()")
#if ($input.length() > 0)
  ## Resolve the input as a user/group reference and use only the document name for matching.
  #set ($input = $services.model.resolveDocument($input).name)
#end
#if ($request.uorg == 'user')
  #set ($statement = 'from doc.object(XWiki.XWikiUsers) as user where lower(doc.name) like :input or lower(user.first_name) like :input or lower(user.last_name) like :input order by user.first_name, user.last_name')
  #set ($query = $services.query.xwql($statement).setOffset(0).setLimit(10).bindValue('input', "%$input%"))
  #if ($request.wiki == 'local')
    #set ($wikiReference = $doc.documentReference.wikiReference)
  #else
    ## We need an API to create a wiki reference.
    #set ($wikiReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'Space', 'Page').wikiReference)
  #end
  #set ($discard = $query.setWiki($wikiReference.name))
  #foreach($user in $query.execute())
    #set ($userReference = $services.model.resolveDocument($user, $wikiReference))
    #set ($userStringReference = $services.model.serialize($userReference, 'default'))
    #getUserAvatarURL($userReference $avatarURL 30)
    #set ($userName = $xwiki.getUserName($userStringReference, false))
    <rs id="$escapetool.xml($userReference.name)" info="$escapetool.xml($userName)" icon="$escapetool.xml($url)">$escapetool.xml($userStringReference)</rs>
  #end
#else ## groups
  #set ($filterMap = {'name': $input})
  #if ($request.wiki == 'local')
    #set ($allGroups = $xwiki.rightsmanager.groupsApi.getAllMatchedLocalGroupsNames($filterMap))
  #else
    #set ($allGroups = $xwiki.rightsmanager.groupsApi.getAllMatchedGlobalGroupsNames($filterMap))
  #end
  #foreach ($group in $allGroups)
    <rs>$group</rs>
  #end
#end
</results>