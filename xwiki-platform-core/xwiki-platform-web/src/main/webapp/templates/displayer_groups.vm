#if ($type == 'edit')
  ##
  ## Pull the required resources.
  ##
  #set ($isMultiSelect = $field.getProperty('multiSelect').value == 1)
  #if ($isMultiSelect)
    ## Needed for sorting the selected values.
    #set ($discard = $xwiki.jsfx.use('js/scriptaculous/dragdrop.js'))
  #end
  ## Needed for displaying a list of suggestions based on the user input.
  #set ($discard = $xwiki.ssfx.use('uicomponents/suggest/suggest.css', true))
  #set ($discard = $xwiki.jsfx.use('uicomponents/suggest/suggest.js', true))
  ## Needed for managing the selected values. In single selection mode the value selected from the list of suggestions
  ## overwrites the previously selected value.
  #set ($discard = $xwiki.ssfx.use('uicomponents/suggest/suggestPicker.css', true))
  #set ($discard = $xwiki.jsfx.use('uicomponents/suggest/suggestPicker.js', true))
  ## The actual group picker. Provides a custom display for the group suggestions and selected groups.
  #set ($discard = $xwiki.ssfx.use('uicomponents/widgets/userpicker/userPicker.css', true))
  #set ($discard = $xwiki.jsfx.use('uicomponents/widgets/userpicker/userPicker.js', true))
  ##
  ## Display the text input.
  ##
  #set($id = $escapetool.xml("${prefix}${name}"))
  <input type="text" id="$!id" name="$!id" value="$!escapetool.xml($value)"
    class="suggestGroups#if ($isMultiSelect) multipleSelection#end" />
#elseif ($type == 'view')
  #set ($values = $value.split('\s*,\s*'))
  #set ($selectedGroups = [])
  #foreach ($value in $values)
    #if ($value.length() > 0)
      #set ($discard = $selectedGroups.add($value))
    #end
  #end
  #if ($selectedGroups.size() > 0)
    #set ($discard = $xwiki.ssfx.use('uicomponents/widgets/userpicker/userPicker.css', true))
    <ul class="users">
    #foreach ($group in $selectedGroups)
      #set ($groupReference = $services.model.resolveDocument($group))
      #set ($groupName = $xwiki.getDocument($groupReference).plainTitle)
      #if ("$!groupName" == '')
        #set ($groupName = $groupReference.name)
      #end
      <li class="user">
        <div class="user-avatar-wrapper">
          #getUserAvatarURL($groupReference $avatarURL 30)
          <img src="$escapetool.xml($avatarURL.url)" class="icon"
            alt="$escapetool.xml($groupName)" />
        </div>
        <div class="user-name">
          <a href="$escapetool.xml($xwiki.getURL($groupReference))">$escapetool.xml($groupName)</a>
        </div>
        <div>
          <span class="user-alias">$escapetool.xml($groupReference.name)</span>
          ## Display the wiki only for local groups.
          #if ($xwiki.isVirtualMode() && $groupReference.wikiReference.name != $xcontext.getMainWikiName())
            <span class="user-wiki">$escapetool.xml($groupReference.wikiReference.name)</span>
          #end
        </div>
      </li>
    #end
    </ul>
  #end
#else
  ## In order for the custom displayer to be taken into account, the result of its evaluation with an unknown display
  ## mode must not be empty. Let's output something.
  Unknown display mode.
#end
