#template('xwikivars.vm')
#if ($isGuest)
  #error ($services.localization.render('core.viewers.share.error.mustLogin'))
#elseif ("$!{request.send}" != '')
  ## =================================================================================================================
  ## The "send" parameter is passed which means we should send the mails.
  ## The following parameters are also passed:
  ## - "message": the user-defined message, which is used inside the Mail Template located inside XWiki.SharePage
  ## - "targetUsers": a list of user references to which to share the page with. There can be one or several parameters
  ##   with this name, each one is a list of user references, each separated by commas.
  ## - "targetGroups": a list of group references to which to share the page with. There can be one or several
  ##   parameters with this name, each one is a list of group references, each separated by commas.
  ## - "targetEmails": a list of email addresses to which to share the page with. This allows to share a page with
  ##   people who do not necessarily have an XWiki account on this server.
  ## - "includeDocument": Whether to include the document in the mail or to link to it. Values are 'inline' or 'link'
  ## - "includeSender": if not empty then the mail is also sent to the email address of the user whose reference is
  ##   passed in this parameter. E.g. "includeSender=XWiki.Admin"
  ## =================================================================================================================
  ## Generate a list of resolved user references to send the mail to
  #set ($targetUsers = [])
  #foreach ($targetUser in $stringtool.split($request.targetUsers, ','))
    #set ($discard = $targetUsers.add($services.model.resolveDocument($targetUser)))
  #end
  ## Add the Sender to the list of user references if the user has specified to include the sender
  #if ("$!{request.includeSender}" != '')
    #set ($discard = $targetUsers.add($services.model.resolveDocument($request.includeSender)))
  #end
  ## Generate a list of resolved group references to also send the mail to
  #set ($targetGroups = [])
  #foreach ($targetGroup in $stringtool.split($request.targetGroups, ','))
    #set ($discard = $targetGroups.add($services.model.resolveDocument($targetGroup)))
  #end
  ## Generate a list of email addresses to also send the mail to
  #set ($targetEmails = [])
  #foreach ($targetEmail in $stringtool.split($request.targetEmails, ','))
    #set ($discard = $targetEmails.add($targetEmail))
  #end
  ## Note: We check that some recipients have been specified in case this template is called directly. Normally it's
  ## called by the form below and there's Javascript that executes to verify that some recipients have been specified.
  #if (!$targetUsers.isEmpty() || !$targetGroups.isEmpty() || !$targetEmails.isEmpty())
    ## Prepare the list of Velocity variables that we want to bind and make available to the Share Page Template Object
    ## - "doc": the current document object
    ## - "message": the user-provided message
    ## - "display": whether to include the document in the mail or to link to it. Values are 'inline' or 'link'
    #set ($velocityVariables = {})
    #set ($discard = $velocityVariables.put('doc', $doc))
    #set ($discard = $velocityVariables.put('message', "$!{request.message.trim()}"))
    #set ($discard = $velocityVariables.put('display', "$!{request.includeDocument}"))
    ## Send the mails asynchronously since there can be a lot and thus it may take a long time to send them all.
    ## This means that the Administrators should check the Mail Sender Admin Status page to know the status.
    #set ($templateParameters = {'type' : 'Share Page', '''language' : $xcontext.language,
      'velocityVariables' : $velocityVariables})
    #set ($templateReference = $services.model.createDocumentReference('', 'XWiki', 'SharePage'))
    #set ($parameters = {'hint': 'template', 'parameters' : $templateParameters, 'source' : $templateReference})
    #set ($source = {'groups' : $targetGroups, 'users' : $targetUsers, 'emails' : $targetEmails})
    ## Macro to display errors to the user
    #macro (displayError $text)

      {{html}}
        &lt;div class="xwikirenderingerror" title="Click to get more details about the error"
          style="cursor: pointer;"&gt;
          $services.localization.render('core.viewers.share.send.failure')
        &lt;/div&gt;
        &lt;div class="xwikirenderingerrordescription hidden"&gt;
          &lt;pre&gt;${text}&lt;/pre&gt;
        &lt;/div&gt;
      {{/html}}

    #end
    #set ($messageIterator = $services.mailsender.createMessages('usersandgroups', $source, $parameters))
    ## Handle error in message creation
    #if ($services.mailsender.lastError)
       #displayError($exceptiontool.getStackTrace($services.mailsender.lastError))
    #else
      #set ($mailResult = $services.mailsender.sendAsynchronously($messageIterator, 'database'))
      ## Handle error in message sending
      #if ($services.mailsender.lastError)
        #displayError($exceptiontool.getStackTrace($services.mailsender.lastError))
      #else
        #info($services.localization.render('core.viewers.share.send.processing'))
        <a href='$doc.getURL()' class='share-backlink'>$services.localization.render('core.viewers.share.send.back',
          ["<em>${doc.displayTitle}</em>"])</a>
      #end
    #end
  #else
    ## No recipients specified, return an error message
    $services.localization.render('core.viewers.share.error.missingRecipient')
  #end
#else
  ## Form hasn't been submitted yet, display the UI and the Form.
  #userPicker_import()
  #set ($discard = $xwiki.ssx.use('XWiki.SharePage'))
  #set ($discard = $xwiki.jsx.use('XWiki.SharePage'))
  <form class="xform" action="$doc.getURL('view', 'viewer=share')" method="post">
    <div class="hidden">
      <input type="hidden" name="form_token" value="$services.csrf.token" />
      <input type="hidden" name="send" value="1" />
    </div>
    <dl>
      <dt>
        <label>$services.localization.render('core.viewers.share.target')</label>
      </dt>
      <dd>
        <span id="shareErrorField"></span>
      </dd>
      <dt>
        <span class="xHint">$services.localization.render('core.viewers.share.target.user.hint')</span>
      </dt>
      <dd>
        <input type="text" name="targetUsers" id="shareTargetUsers" #if (!$xcontext.isMainWiki())class="withScope"#end
          value="$!escapetool.xml($stringtool.join($request.getParameterValues('targetUsers'), ','))"/>
      </dd>
      <dt>
        <span class="xHint">$services.localization.render('core.viewers.share.target.group.hint')</span>
      </dt>
      <dd>
        <input type="text" name="targetGroups" id="shareTargetGroups" #if (!$xcontext.isMainWiki())class="withScope"#end
          value="$!escapetool.xml($stringtool.join($request.getParameterValues('targetGroups'), ','))"/>
      </dd>
      <dt>
        <span class="xHint">$services.localization.render('core.viewers.share.target.emails.hint')</span>
      </dt>
      <dd>
        <input type="text" name="targetEmails" id="shareTargetEmails" #if (!$xcontext.isMainWiki())class="withScope"#end
          value="$!escapetool.xml($stringtool.join($request.getParameterValues('targetEmails'), ','))"/>
      </dd>
      #set ($ownEmail = "$!{xwiki.getDocument($xcontext.user).getObject('XWiki.XWikiUsers').getProperty('email').value}")
      #if ($ownEmail != '')
        <dd>
          <label for="includeSender">
            <input type="checkbox" id="includeSender" name="includeSender" value="${xcontext.user}"/>
            $services.localization.render('core.viewers.share.target.ccMe')
          </label>
        </dd>
      #end
      <dt>
        <label>$services.localization.render('core.viewers.share.includeMethod')</label>
      </dt>
      <dd>
        <label>
          <input type="radio" name="includeDocument" value="link" checked="checked"/>
          $services.localization.render('core.viewers.share.includeMethod.link')
        </label>
      </dd>
      <dd>
        <label>
          <input type="radio" name="includeDocument" value="inline"/>
          $services.localization.render('core.viewers.share.includeMethod.inline')
        </label>
      </dd>
      ## Possible future improvements:
      ## <dd><label><input type="radio" name="includeDocument" value="attachment"/> $services.localization.render('core.viewers.share.includeMethod.attachment')</label></dd>
      ## <dd><label><input type="checkbox" name="includeComments"/> $services.localization.render('core.viewers.share.includeComments')</label></dd>
      ## Compute and display the preview message
      #set ($message = "<textarea name='message' rows='3' cols='80'>${services.localization.render('core.viewers.share.defaultMessage')}</textarea>")
      #set ($fullMessage = $xwiki.getDocument('XWiki.SharePage').getObject('XWiki.Mail', 'language', $xcontext.language, true).getProperty('html').value)
      #set ($fullMessage = $fullMessage.replace('${recipientName}', $services.localization.render('core.viewers.share.recipientPlaceholder')))
      #set ($fullMessage = $fullMessage.replaceAll('<pre[^>]*+>[^<]*+</pre>', $message))
      #set ($fullMessage = $xwiki.parseContent($fullMessage))
      <dt>
        <label for="message">$services.localization.render('core.viewers.share.messagePreviewLabel')</label>
      </dt>
      <dd class='mail-preview'>$fullMessage</dd>
    </dl>
    <div class="buttons">
      <span class="buttonwrapper">
        <input type="submit" class="button" value="$services.localization.render('core.viewers.share.submit')" />
      </span>
      <span class="buttonwrapper">
        <a class="secondary button" href="$doc.getURL()">$services.localization.render('core.viewers.share.cancel')</a>
      </span>
    </div>
  </form>
#end